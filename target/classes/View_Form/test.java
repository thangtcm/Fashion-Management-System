/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View_Form;

import Components.ImageField;
import com.raven.chart.ModelChartLine;
import java.awt.Color;
import java.awt.Image;
import java.awt.Label;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.io.FilenameUtils;

/**
 *
 * @author couni
 */
public class test extends javax.swing.JFrame {

    /**
     * Creates new form test
     * @throws java.security.NoSuchAlgorithmException
     */
    
    public test() throws NoSuchAlgorithmException {
        initComponents();
        initData();
        String password = "admin@123";
        MessageDigest digest = MessageDigest.getInstance("SHA-256");
        byte[] encodedhash = digest.digest(
                password.getBytes(StandardCharsets.UTF_8));
        System.out.println("My Hash: " + bytesToHex(encodedhash));
    }
    
    public final String bytesToHex(byte[] hash) {
        StringBuilder hexString = new StringBuilder(2 * hash.length);
        for (int i = 0; i < hash.length; i++) {
            String hex = Integer.toHexString(0xff & hash[i]);
            if(hex.length() == 1) {
                hexString.append('0');
            }
            hexString.append(hex);
        }
        return hexString.toString();
    }
    
    private void initData() {

        //  Test data chart line
        List<ModelChartLine> list = new ArrayList<>();
        list.add(new ModelChartLine("Monday", 10));
        list.add(new ModelChartLine("Tuesday", 150));
        list.add(new ModelChartLine("Wednesday", 80));
        list.add(new ModelChartLine("Thursday", 100));
        list.add(new ModelChartLine("Friday", 125));
        list.add(new ModelChartLine("Saturday", 80));
        list.add(new ModelChartLine("Sunday", 200));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        badge1 = new swing.Badge.Badge();
        badge2 = new swing.Badge.Badge();
        buttonEdit2 = new swing.Button.ButtonEdit();
        imageAvatar1 = new swing.Image.ImageAvatar();
        textFieldRadius1 = new swing.Field.TextFieldRadius();
        imageLinear1 = new swing.Image.ImageLinear();
        JPanelTest = new javax.swing.JPanel();
        imageField1 = new Components.ImageField();
        buttonEdit1 = new swing.Button.ButtonEdit();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        badge1.setText("Waitting");

        badge2.setText("badge2");

        buttonEdit2.setBackground(new java.awt.Color(231, 231, 231));
        buttonEdit2.setText("Save");
        buttonEdit2.setBorderColor(new java.awt.Color(51, 51, 255));
        buttonEdit2.setRadius(30);
        buttonEdit2.setSizeBorder(1);
        buttonEdit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEdit2ActionPerformed(evt);
            }
        });

        imageAvatar1.setImage(new javax.swing.ImageIcon(getClass().getResource("/Images/Avatar/avatar.jpg"))); // NOI18N

        textFieldRadius1.setText("");
        textFieldRadius1.setLabelText("Nháº­p");
        textFieldRadius1.setShadowColor(new java.awt.Color(0, 204, 255));

        imageLinear1.setImage(new javax.swing.ImageIcon(getClass().getResource("/Images/Avatar/avatarpatient.jpg"))); // NOI18N

        JPanelTest.setBackground(new java.awt.Color(255, 255, 255));
        JPanelTest.add(imageField1);

        buttonEdit1.setBackground(new java.awt.Color(231, 231, 231));
        buttonEdit1.setText("UploadFile");
        buttonEdit1.setBorderColor(new java.awt.Color(51, 51, 255));
        buttonEdit1.setRadius(30);
        buttonEdit1.setSizeBorder(1);
        buttonEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEdit1ActionPerformed(evt);
            }
        });
        JPanelTest.add(buttonEdit1);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imageAvatar1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(badge2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imageLinear1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(badge1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(209, 209, 209)
                                .addComponent(textFieldRadius1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
                                .addComponent(buttonEdit2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(418, 418, 418))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(395, 395, 395)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(JPanelTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(629, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(badge1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(badge2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(imageAvatar1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(buttonEdit2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldRadius1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(imageLinear1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                        .addComponent(JPanelTest, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private ArrayList<ImageField> labellist = new ArrayList<ImageField>();
    private void buttonEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEdit1ActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.dir")));

         //filter the files
         FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","png");
         file.addChoosableFileFilter(filter);
         file.setAcceptAllFileFilterUsed(false);
         int result = file.showSaveDialog(null);
         
          //if the user click on save in Jfilechooser
         if(result == JFileChooser.APPROVE_OPTION){
            ImageField label = new ImageField();
            File selectedFile = file.getSelectedFile();
            //dataFile = Files.readAllBytes(selectedFile.toPath());
            label.setNameFile(selectedFile.getName());
            String filename = selectedFile.getAbsolutePath();
            
            label.setSelectedFile(selectedFile);
            label.setSize(92, 115);
            System.out.println("View_Form.test.buttonEdit1ActionPerformed() " + label.getWidthImage());
            label.setImage(new ImageIcon(filename));
            JPanelTest.add(label, 0);
            JPanelTest.revalidate();
            JPanelTest.repaint();
            label.getButton().addActionListener((ActionEvent e) -> {
                JPanelTest.remove(label);
                JPanelTest.revalidate();
                JPanelTest.repaint();
                labellist.remove(label);
            });
            labellist.add(label);
           // jLabel1.setIcon(ResizeImage(filename, jLabel1));
         }
          //if the user click on save in Jfilechooser


         else if(result == JFileChooser.CANCEL_OPTION){
             System.out.println("No File Select");
         }
    }//GEN-LAST:event_buttonEdit1ActionPerformed

    private void buttonEdit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEdit2ActionPerformed
        String absolutePath = System.getProperty("user.dir");
        String extension, newName, PathFile, Path;
        for(ImageField obj : labellist)
        {
            extension = FilenameUtils.getExtension(obj.getNameFile());
            newName = FilenameUtils.getBaseName(obj.getNameFile()) + "_" + System.currentTimeMillis() + "." + extension; // táº¡o tÃªn file má»i
            PathFile = "/Images/Products/"+ newName;
            Path = absolutePath + "/src/main/java" + PathFile;
            try {
                byte[] data;
                try (FileInputStream fis = new FileInputStream(obj.getSelectedFile())) {
                    data = new byte[(int) obj.getSelectedFile().length()];
                    fis.read(data);
                }
                saveFile(data, Path);
                System.out.println("File uploaded successfully (FileName : " + newName + " )");
                String fullPath = new File(Path).getAbsolutePath();
                System.out.println("File saved to: " + fullPath);
                System.out.println("File saved to: " + PathFile);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }

        
        
    }//GEN-LAST:event_buttonEdit2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int ID = 0;
        for(ImageField obj : labellist)
        {
            System.out.println("ID " + ID++);
            System.out.println("Name " + obj.getNameFile());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void saveFile(byte[] data, String filename) throws IOException {
        File dir = new File("/src/main/java/Images/Products/"); // táº¡o Äá»i tÆ°á»£ng File cho thÆ° má»¥c lÆ°u trá»¯
        if (!dir.exists()) { // náº¿u thÆ° má»¥c khÃ´ng tá»n táº¡i, táº¡o má»i
            dir.mkdirs();
        }
        try (FileOutputStream out = new FileOutputStream(filename)) {
            out.write(data);
        }
    }
    
    public ImageIcon ResizeImage(String ImagePath, int width, int height)
    {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new test().setVisible(true);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelTest;
    private swing.Badge.Badge badge1;
    private swing.Badge.Badge badge2;
    private swing.Button.ButtonEdit buttonEdit1;
    private swing.Button.ButtonEdit buttonEdit2;
    private swing.Image.ImageAvatar imageAvatar1;
    private Components.ImageField imageField1;
    private swing.Image.ImageLinear imageLinear1;
    private javax.swing.JButton jButton1;
    private swing.Field.TextFieldRadius textFieldRadius1;
    // End of variables declaration//GEN-END:variables
}
